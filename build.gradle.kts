/*
 * This file was generated by the Gradle "init" task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.10.2/samples
 * This project uses @Incubating APIs which are subject to change.
 */

repositories {
  mavenCentral()
}

plugins {
  id("java-library")
  alias(libs.plugins.protobuf)
}

dependencies {
  api(libs.kotlinx.coroutines.core)
  api(libs.grpc.stub)
  api(libs.grpc.protobuf.lite)
  api(libs.grpc.kotlin.stub)
  api(libs.protobuf.java.util)
  api(libs.protobuf.kotlin)
  api(libs.protobuf.java)


  protobuf(files("modules/"))
}



val home = System.getProperty("user.home")
protobuf {
  protoc {
    path = "${home}/.asdf/shims/protoc"
  }
  plugins {
        create("grpckt") {
            artifact = libs.protoc.gen.grpc.kotlin.get().toString() + ":jdk8@jar"
        }
  }
  generateProtoTasks {
    all().forEach {
      it.plugins {
        // Apply the "grpc" plugin whose spec is defined above, without
        // options. Note the braces cannot be omitted, otherwise the
        // plugin will not be added. This is because of the implicit way
        // NamedDomainObjectContainer binds the methods.

        create("grpckt") {
          option("lite")
        }
      }
     
    }
  }
}